{"version":3,"sources":["App/Header/index.js","App/Footer/index.js","App/currencies.js","App/Form/index.js","App/Section/index.js","App/Container/index.js","App/Result/index.js","App/Section/Timer/useCurrentDate.js","App/Section/Timer/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","currencies","short","name","rate","Form","calculateResult","useState","amount","setAmount","currency","setCurrency","action","onSubmit","event","preventDefault","value","onChange","target","type","step","min","autoFocus","required","map","onClick","Section","title","body","extraSectionContent","Container","children","Result","result","sourceAmount","toFixed","targetAmount","useCurrentDate","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","Timer","props","formattedDate","toLocaleString","undefined","weekday","day","month","hour","minute","second","App","setResult","console","log","find","reslut","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fadcf119.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">Kantor wymiany walut</h1>\r\n        <p>Pole oznaczone* jest wymagane</p>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n        <p>YouCode 2021 - Edycja II</p>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","const currencies = [\r\n    {\r\n        short: \"EUR\",\r\n        name: \"Euro\",\r\n        rate: 4.57\r\n    },\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar Amerykański\",\r\n        rate: 4.57\r\n    },\r\n    {\r\n        short: \"GBP\",\r\n        name: \"Funt Brytyjski\",\r\n        rate: 4.57\r\n    },\r\n];\r\n\r\nexport { currencies };","import { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { currencies } from \"../currencies\";\r\n\r\nconst Form = ({ calculateResult }) => {\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        calculateResult(amount, currency);\r\n    };\r\n\r\n    const resetForm = ()=>{\r\n        setAmount(\"\");\r\n        setCurrency(currencies[0].short);\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className=\"form\"\r\n            action=\"https://postman-echo.com/get\"\r\n            onSubmit={onFormSubmit}\r\n        >\r\n            <p>\r\n                <label>\r\n                    <span className=\"form__labelText\">\r\n                        Podaj kwotę w PLN*\r\n                    </span>\r\n                    <input\r\n                        value={amount}\r\n                        onChange={({ target }) => setAmount(target.value)}\r\n                        className=\"form__field\"\r\n                        name=\"PLN\"\r\n                        type=\"number\"\r\n                        step=\"any\"\r\n                        min=\"0\"\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                </label>\r\n            </p>\r\n            <p>\r\n                <label>\r\n                    <span className=\"form__labelText\">\r\n                        Wybierz walutę\r\n                    </span>\r\n                    <select\r\n                        value={currency}\r\n                        onChange={({ target }) => setCurrency(target.value)}\r\n                        className=\"form__field\"\r\n                        name=\"currency\"\r\n                    >\r\n                        {currencies.map((currency => (\r\n                            <option\r\n                                key={currency.short}\r\n                                value={currency.short}\r\n                            >\r\n                                {currency.name}\r\n                            </option>\r\n                        )))}\r\n                    </select>\r\n                </label>\r\n            </p>\r\n            <p>\r\n                <button className=\"form__button\">Przelicz</button>\r\n                <button onClick={resetForm} className=\"form__button\" type=\"reset\">Wyczyść</button>\r\n            </p>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, className, extraSectionContent }) => (\r\n    <section className={className}>\r\n        {extraSectionContent}\r\n        <h2 className=\"section__header\">{title}</h2>\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","const Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import \"./style.css\";\r\n\r\nconst Result = ({ result }) => (\r\n    <p className=\"result\">\r\n        {!!result && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </p>\r\n);\r\n\r\nexport default Result;","import { useState, useEffect } from 'react';\r\n\r\nconst useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {setDate(new Date())}, 1000);\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return date;\r\n};\r\n\r\nexport default useCurrentDate;","import useCurrentDate from \"./useCurrentDate\";\r\nimport \"./style.css\";\r\n\r\nconst Timer = (props) => {\r\n    const date = useCurrentDate();\r\n\r\n    const formattedDate = date.toLocaleString(undefined, {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\"\r\n    });\r\n\r\n    return (\r\n        <p className=\"timer\">\r\n            Dzisiaj jest \r\n            {\" \"}\r\n            {formattedDate}\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default Timer;","import { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Form from \"./Form\";\r\nimport Section from \"./Section\";\r\nimport Container from \"./Container\";\r\nimport { currencies } from \"./currencies\";\r\nimport Result from \"./Result\";\r\nimport Timer from \"./Section/Timer\";\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = (amount, currency) => {\r\n    const rate = currencies.find(({ short }) => short === currency).rate;\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount / rate,\r\n      currency,\r\n    });\r\n  };\r\n\r\n  const welcome = () => {\r\n    console.log(\"Hello world created by Krzysiu. Nice to be here\");\r\n  };\r\n\r\n  welcome();\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <Section\r\n          className=\"section\"\r\n          title=\"Kalkulator walut\"\r\n          extraSectionContent={\r\n            <Timer />\r\n          }\r\n          body={\r\n            <Form\r\n              calculateResult={calculateResult}\r\n              reslut={result}\r\n            />\r\n          }\r\n        />\r\n\r\n        <Section\r\n          className=\"section section--height\"\r\n          title=\"Wynik:\"\r\n          body={\r\n            <Result\r\n              result={result}\r\n            />\r\n          }\r\n        />\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}